{
	"info": {
		"_postman_id": "b74165a1-df12-47ef-9fbd-5531b0465ad1",
		"name": "Mini_Assignment_1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Check_Title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content Type is JSON\", function(){\r",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=utf-8\");\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Checking User_id\" ,function(){\r",
							"    data =pm.response.json();\r",
							"    user_id = data[39].userId;\r",
							"   pm.expect(user_id).to.eql(4);\r",
							"})\r",
							"\r",
							"pm.test(\"Verify Every user contains 'title' and its type is String\",function(){\r",
							"    var a=pm.response.json();\r",
							"    var f=true;\r",
							"    for(var i=0;i<a.length;i++)\r",
							"    {\r",
							"        if(typeof(a[i].title) != \"string\" ){\r",
							"            f=false\r",
							"            break;\r",
							"        }\r",
							"}\r",
							"   pm.expect(f).to.eql(true);\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{domain_name}}posts",
					"host": [
						"{{domain_name}}posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add_Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Content Type is JSON\", function(){\r",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=utf-8\");\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\"=\"{{name}}\",\r\n    \"Job\"=\"{{job}}\"\r\n}"
				},
				"url": {
					"raw": "{{domain_name1}}api/users",
					"host": [
						"{{domain_name1}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content Type is JSON\", function(){\r",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=utf-8\");\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\"=\"{{change_name}}\",\r\n    \"Job\"=\"{{change_job}}\"\r\n}"
				},
				"url": {
					"raw": "{{domain_name1}}api/users",
					"host": [
						"{{domain_name1}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Content Type is JSON\", function(){\r",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{domain_name}}posts/1",
					"host": [
						"{{domain_name}}posts"
					],
					"path": [
						"1"
					]
				}
			},
			"response": []
		}
	]
}